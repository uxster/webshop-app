doctype html
html
	head
		meta(http-equiv='X-UA-Compatible', content='IE=edge')
		script(src='https://www.paypalobjects.com/api/checkout.js')
		script(src='http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js')
	body

		h1= account
		//- form(method='POST' 
		//- action='/amountBox' 
		//- name='amountBox')
		//- 	input#amountBox(type="number" min="1" max="100" name="amountBox")
		//- 	button#btn(type='submit', value='Submit')
		//- 		br
		//- 		i Please insert amount
		#paypal-button-container

		script.
			paypal.Button.render({
			env: 'sandbox', // sandbox | production
			// PayPal Client IDs - replace with your own
			// Create a PayPal app: https://developer.paypal.com/developer/applications/create
			client: {
			sandbox:    'AFcWxV21C7fd0v3bYYYRCpSSRl31ArSMlXE5bY1dwzpmmg.LzJ.OkoLM',
			production: 'AXH9Iq45g7nDnl6IGFKMg2lr2RHb8Va0Cn-1jlyI2MPx-LyAGydK4eGTyPWCHlXKULP5Qphsnjhu0X62'
			},
			// Show the buyer a 'Pay Now' button in the checkout flow
			commit: true,
			// payment() is called when the button is clicked
			payment: function (data, actions) {
			// Make a call to the REST api to create the payment
			var totalPrice = 
			//- req.body.amountBox * 10.00;
			"30.00";

			return actions.payment.create({
			payment: {
			transactions: [
			{
			amount: { total: `${totalPrice}`, currency: 'USD' }
			}
			]
			}
			});
			},
			// onAuthorize() is called when the buyer approves the payment
			onAuthorize: function (data, actions) {
			// Make a call to the REST api to execute the payment

			return actions.payment.execute().then( function() {
				//- $(document).ready(() =>{
				//- 	//- let orderQuantity = req.body.orderQuantity
				//- 	let orderQuantity = $("#amountBox").val();
				//- 			$.post("/pay", {orderQuantity: orderQuantity});
				//- 		})});
			window.alert('Payment Complete!');
			});
			}}, '#paypal-button-container');